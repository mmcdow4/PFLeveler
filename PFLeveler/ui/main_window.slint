import { TabWidget, StandardButton, VerticalBox } from "std-widgets.slint";
import { SummaryPage, InputField } from "summary_page.slint";
import { RacePage } from "race_page.slint";
import { SkillPage, SkillInfo } from "skill_page.slint";
import { Styles } from "styles.slint";

export component MainWindow inherits Window {
    preferred-width: Styles.window-init-width;
    preferred-height: Styles.window-init-height;


    /* Menu Callbacks */
    callback handle-file-new-character;
    callback handle-file-import-character;
    callback handle-file-export-character;
    callback handle-file-exit;
    callback help-describe-page;
    callback help-version;
    MenuBar {
        Menu {
            title: @tr("File");
            MenuItem {
                title: @tr("New Character");
                activated => { root.handle-file-new-character(); }
            }
            MenuItem {
                title: @tr("Import Character");
                activated => { root.handle-file-import-character(); }
            }
            MenuItem {
                title: @tr("Export Character");
                activated => { root.handle-file-export-character(); }
            }
            MenuItem {
                title: @tr("Exit");
                activated => { root.handle-file-exit(); }
            }
        }
        
        Menu {
            title: @tr("Help");
            MenuItem {
                title: @tr("Describe Page");
                activated => { root.help-describe-page(); }
            }
            MenuItem {
                title: @tr("Version");
                activated => { root.help-version(); }
            }
        }
    }

    HorizontalLayout {
        x: 0px;
        y: 0px;
        VerticalLayout {
            TabWidget {
                Tab {
                    title: "Summary";
                    summary_page:= SummaryPage {
                        lock-clicked => { root.summary-lock-button-clicked(); }
                    }
                }
                Tab {
                    title: "Race";
                    race_page:= RacePage {
                        lock-clicked => { root.race-lock-button-clicked(); }
                        race-selected(value) => { root.race-selected(value); }
                    }
                }
                Tab {
                    title: "Ability Scores";
                    Rectangle {}
                }
                Tab {
                    title: "Class";
                    Rectangle {}
                }
                Tab {
                    title: "Skills";
                    skill_page:= SkillPage {
                        window-width: root.width;
                    }
                }
                Tab {
                    title: "Spells";
                    Rectangle {}
                }
                Tab {
                    title: "Feats";
                    Rectangle {}
                }
                Tab {
                    title: "Equipment";
                    Rectangle {}
                }
            }
        }
    }
    /* SummaryPage Callbacks */
    callback summary-lock-button-clicked;

    // SummaryPage Properties
    in-out property <string> summary__character-alignment-text <=> summary_page.character-alignment-text;
    in-out property <string> summary__alignment-text <=> summary_page.alignment-text;
    in-out property <string> summary__race <=> summary_page.race;
    in-out property <string> summary__size <=> summary_page.size;
    in-out property <string> summary__speed <=> summary_page.speed;
    in-out property <string> summary__languages <=> summary_page.languages;
    in-out property <string> summary__favored-class <=> summary_page.favored-class;
    in-out property <[StandardListViewItem]> summary__class-levels-text <=> summary_page.class-levels-text;
    in-out property <[StandardListViewItem]> summary__ability-score-text <=> summary_page.ability-score-text;
    in-out property <[StandardListViewItem]> summary__skills-text <=> summary_page.skills-text;
    in-out property <[StandardListViewItem]> summary__feats-text <=> summary_page.feats-text;
    in-out property <[StandardListViewItem]> summary__abilities-text <=> summary_page.abilities-text;
    in-out property <int> summary__spells-class-idx <=> summary_page.spells-class-idx;
    in-out property <[[StandardListViewItem]]> summary__spell-slots-text <=> summary_page.spell-slots-text;
    in-out property <[StandardListViewItem]> summary__spells-text <=> summary_page.spells-text;
    in-out property <bool> summary__locked <=> summary_page.locked;
    in-out property <[InputField]> summary__input-fields <=> summary_page.input-fields;

    // RacePage Callbacks
    callback race-lock-button-clicked;
    callback race-selected(string);

    // RacePage Properties
    in-out property <[string]> race__race-names <=> race_page.race-names;
    in-out property <string> race__selected-race <=> race_page.selected-race;
    in-out property <string> race__character-race <=> race_page.character-race;
    in-out property <string> race__size <=> race_page.size;
    in-out property <string> race__speed <=> race_page.speed;
    in-out property <string> race__ability-score-offsets <=> race_page.ability-score-offsets;
    in-out property <string> race__languages-known <=> race_page.languages-known;
    in-out property <string> race__languages-available <=> race_page.languages-available;
    in-out property <int> race__selected-racial-index <=> race_page.selected-racial-index;
    in-out property <[StandardListViewItem]> race__racial-ability-names <=> race_page.racial-ability-names;
    in-out property <[string]> race__racial-ability-descriptions <=> race_page.racial-ability-descriptions;
    in-out property <string> race__selected-racial-description <=> race_page.selected-racial-description;
    in-out property <bool> race__locked <=> race_page.locked;

    // SkillPage Callbacks
    callback skill-lock-button-clicked;

    // SkilPage Properties
    in-out property <[SkillInfo]> skill__skill-data <=> skill_page.skill-data;
    in-out property <int> skill__num-points-remaining <=> skill_page.num-points-remaining;
    in-out property <bool> skill__locked <=> skill_page.locked;
}